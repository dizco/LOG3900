<Window x:Class="PolyPaint.Views.PixelEditorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:converters="clr-namespace:PolyPaint.Converters"
        xmlns:uc="clr-namespace:PolyPaint.Views"
        Title="PolyPaint" Height="700" Width="900" Background="#CBD4E4" MinWidth="627" MinHeight="200"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:PolyPaint.ViewModels"
        d:DataContext="{d:DesignInstance vm:PixelEditorViewModel}">
    <Window.Resources>
        <converters:BorderConverter x:Key="BorderConverter" />
        <converters:BackgroundColorConverter x:Key="BackgroundColorConverter" />
        <converters:EditingToolConverter x:Key="EditingToolConverter" />
    </Window.Resources>
    <DockPanel>
        <Menu IsMainMenu="True" DockPanel.Dock="Top">
            <MenuItem Header="_Fichier">
                <MenuItem Header="_Exporter le dessin" Command="{Binding ExportImageCommand}"
                          CommandParameter="{Binding ElementName=DrawingSurface}" />
            </MenuItem>
            <MenuItem Header="_Dessin">
                <MenuItem Header="Historique des modifications" Command="{Binding OpenHistoryCommand}" IsEnabled="{Binding IsConnectedToDrawing}" />
            </MenuItem>
            <MenuItem Header="_Accessibilité">
                <MenuItem Header="{Binding LockUnlockDrawingMessage}" Icon="{Binding LockUnlockIcon}" IsEnabled="{Binding ProtectionToggleIsEnabled}" Command="{Binding TogglePasswordCommand}"/>
            </MenuItem>
        </Menu>
        <Border DockPanel.Dock="Top" BorderThickness="0,0,0,0.5" BorderBrush="#77000000">
            <StackPanel Orientation="Horizontal" Height="60">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.01">
                        <GradientStop Color="Gray" />
                        <GradientStop Color="#FFFFFFFF" />
                        <GradientStop Color="#FFE0E0E0" Offset="1" />
                    </LinearGradientBrush>
                </StackPanel.Background>


                <Button Name="crayon" Width="40" Height="40" Margin="5"
                        BorderBrush="{Binding Path=ToolSelected, Converter={StaticResource BorderConverter}, ConverterParameter=crayon, UpdateSourceTrigger=PropertyChanged}"
                        Background="{Binding Path=ToolSelected, Converter={StaticResource BackgroundColorConverter}, ConverterParameter=crayon, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding Path=ChooseTool}"
                        CommandParameter="pencil">
                    <StackPanel>
                        <Image Source="/Resources/crayon.png" />
                    </StackPanel>
                </Button>
                <Button Name="efface_segment" Width="40" Height="40" Margin="5"
                        BorderBrush="{Binding Path=ToolSelected, Converter={StaticResource BorderConverter}, ConverterParameter=efface_segment, UpdateSourceTrigger=PropertyChanged}"
                        Background="{Binding Path=ToolSelected, Converter={StaticResource BackgroundColorConverter}, ConverterParameter=efface_segment, UpdateSourceTrigger=PropertyChanged}"
                        Command="{Binding Path=ChooseTool}"
                        CommandParameter="eraser">
                    <StackPanel>
                        <Image Source="/Resources/efface_crayon.png" />
                    </StackPanel>
                </Button>
                <Button Name="select_pixelt" Width="40" Height="40" Margin="5" 
                        BorderBrush="{Binding Path=ToolSelected, Converter={StaticResource BorderConverter}, ConverterParameter=select_pixel, UpdateSourceTrigger=PropertyChanged}" 
                        Background="{Binding Path=ToolSelected, Converter={StaticResource BackgroundColorConverter}, ConverterParameter=select_pixel, UpdateSourceTrigger=PropertyChanged}" 
                        Command="{Binding Path=ChooseTool}"
                        CommandParameter="selector">
                    <StackPanel>
                        <Image Source="/Resources/Icons/Selector.png" />
                    </StackPanel>
                </Button>

                <xctk:ColorPicker x:Name="selecteurCouleur"
                                  VerticalContentAlignment="Stretch"
                                  Background="#00000000"
                                  ShowDropDownButton="False"
                                  ShowRecentColors="True"
                                  BorderBrush="#80000000"
                                  Margin="5,0,0,0" Width="39" Height="38"
                                  SelectedColor="{Binding Path=ColorSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  AvailableColorsHeader="Palette"
                                  StandardColorsHeader="Couleurs de base"
                                  StandardButtonHeader="Standard"
                                  RecentColorsHeader="Récemment utilisées"
                                  UsingAlphaChannel="True"
                                  AdvancedButtonHeader="Personnalisé" />
                <Slider Width="100" Height="26" Minimum="1" Maximum="15"
                        Value="{Binding Path=PixelSizeSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        Margin="12"
                        Foreground="Gray"
                        TickFrequency="10" TickPlacement="BottomRight" IsSnapToTickEnabled="False" />
            </StackPanel>
        </Border>
        <Border DockPanel.Dock="Bottom" Height="25" BorderThickness="0,0.75,0,0.75" BorderBrush="#77000000">
            <StackPanel Orientation="Horizontal" Background="#FFF0F0F0">
                <Image Source="Resources/position.png" Margin="5,5,5,5" VerticalAlignment="Center" />
                <TextBlock Name="textBlockPosition" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </StackPanel>
        </Border>
        <Grid>
            <Grid DockPanel.Dock="Left" Margin="0,1,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Name="colonne" Width="550" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="145*"/>
                    <ColumnDefinition Width="23*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Name="ligne" Height="310" />
                    <RowDefinition Height="6" />
                </Grid.RowDefinitions>
                <Thumb Name="horizontal" Grid.Row="0" Grid.Column="1" Background="White" 
                       Width="6" Height="6" DragDelta="GlisserMouvementRecu" 
                       DragStarted="GlisserCommence" DragCompleted="GlisserTermine"
                 />
                <Thumb Name="diagonal" Grid.Row="1" Grid.Column="1" Background="White" 
                        Width="6" Height="6" DragDelta="GlisserMouvementRecu" 
                        DragStarted="GlisserCommence" DragCompleted="GlisserTermine"
                 />
                <Thumb Name="vertical" Grid.Row="1" Grid.Column="0" Background="White" 
                        Width="6" Height="6" DragDelta="GlisserMouvementRecu" 
                        DragStarted="GlisserCommence" DragCompleted="GlisserTermine"
                 />
                <Grid Name="GridSurface"
                      MouseMove="GridSurfaceMouseMove" MouseUp="GridSurfaceMouseUp" MouseDown="GridSurfaceMouseDown"
                >
                    <Border x:Name="DisplayArea" BorderThickness="5,5,0,0" >
                        <Canvas x:Name="DrawingSurface"
                                Background="White" ClipToBounds="True"  
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                MouseMove="DrawingSurfaceMouseMove" MouseEnter="DrawingSurfaceMouseEnter" PreviewMouseDown=" DrawingSurfacePreviewMouseDown">
                            <Image x:Name="DrawnImage" VerticalAlignment="Top" Source="{Binding WriteableBitmap}" />
                            <Image x:Name="SelectedZone" VerticalAlignment="Top" Source="{Binding CropWriteableBitmap}" />
                        </Canvas>
                        <Border.Effect>

                            <DropShadowEffect Opacity="0.3" BlurRadius="10" />
                        </Border.Effect>
                    </Border>

                    <Canvas Margin="5,5,0,0">
                        <!-- This canvas is overlaid over the previous canvas and is used to 
                    place the rectangle that implements the drag selection box. -->
                        <Rectangle
                            x:Name="selectionBox"
                            Visibility="Collapsed"
                            Stroke="Black"
                            StrokeThickness="1"
                            StrokeDashArray="4 4"
                        />
                    </Canvas>
                </Grid>
            </Grid>
            <Grid Width="300" Visibility="{Binding ChatDocked}" HorizontalAlignment="Right" Background="WhiteSmoke">
                <uc:ChatView />
            </Grid>
        </Grid>
        
    </DockPanel>
</Window>